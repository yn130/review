<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Ingredients Plus</title>
    <style>
        /* @font-face 선언 */
        @font-face {
            font-family: 'BMJUA';
            src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_one@1.0/BMJUA.woff') format('woff');
            font-weight: normal;
            font-style: normal;
        }

        /* 기본 스타일 설정 */
        body {
            font-family: 'BMJUA', sans-serif; /* 모든 글자에 폰트 적용 */
            margin: 20px;
            background-color: #A7E344;
        }
        h1 {
            color: #ffffff; /* 흰색 */
            text-align: center;
        }
        .form-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-top: 50px;
            width: 100%; /* 브라우저 가로 길이의 100% 차지 */
        }

        #ingredientForm {
            width: 100%; /* 폼 전체의 가로 길이를 100%로 설정 */
            max-width: 300px; /* 최대 너비를 제한하여 너무 넓어지지 않도록 함 */
            display: flex;
            flex-direction: column;
            align-items: center; /* 가운데 정렬 */
        }

        .input-field, .submit-button {
            width: 100%; /* 인풋 창과 등록 버튼의 가로 길이를 100%로 설정 */
            max-width: 300px; /* 최대 너비를 제한하여 너무 넓어지지 않도록 함 */
            margin-bottom: 20px;
            padding: 15px;
            font-size: 16px;
            border-radius: 10px;
            border: none;
            outline: none;
            box-shadow: 3px 3px 6px rgba(0, 0, 0, 0.1), -3px -3px 6px rgba(255, 255, 255, 0.7); /* 뉴모피즘 스타일 */
            font-family: 'BMJUA', sans-serif; /* 모든 글자에 폰트 적용 */
            box-sizing: border-box; /* 요소의 크기를 패딩과 테두리를 포함하도록 설정 */
        }

        .submit-button {
            background-color: #03a9f4;
            color: white;
            cursor: pointer;
            transition: background-color 0.3s;
        }

        .submit-button:hover {
            background-color: #0288d1;
        }
    </style>
</head>
<body>
    <h1>재료 추가</h1>
    <div class="form-container">
        <!-- 재료 추가 폼 -->
        <form id="ingredientForm">
            <input type="hidden" name="categoryID" value=""> <!-- 현재 선택된 카테고리의 ID -->
            <input type="text" name="ingredientName" class="input-field" placeholder="재료 이름을 입력하세요" required>
            <button type="submit" class="submit-button">등록</button>
        </form>
    </div>

    <script>
        window.onload = function() {
            const categoryID = localStorage.getItem('selectedCategoryID');

            // categoryID 값을 가져옴
            if (categoryID) {
                document.querySelector('input[name="categoryID"]').value = categoryID;
            } else {
                console.error('categoryID를 찾을 수 없습니다.');
            }
        }

        // 재료 추가 폼 제출 시 이벤트 핸들러
        document.getElementById('ingredientForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // 기본 폼 제출 방지

            const accessToken = sessionStorage.getItem('accessToken'); // 세션에서 토큰 가져오기
            if (!accessToken) {
                // 토큰이 없으면 로그인 페이지로 리다이렉트
                alert('재료를 추가하기 위해서는 로그인이 필요합니다. 로그인 페이지로 이동합니다.');
                window.location.href = '/user/login';
                return;
            }

            // 폼 데이터를 가져옴
            const formData = new FormData(this);
            const categoryID = formData.get('categoryID');
            const ingredientName = formData.get('ingredientName');

            try {
                // 서버로 폼 데이터를 전송
                const response = await fetch('/category/ingredientsPlus/add', {
                    method: 'POST',
                    headers: {
                        'Authorization': 'Bearer ' + accessToken, // 토큰을 헤더에 포함
                        'Content-Type': 'application/json' // JSON 형식으로 데이터 전송
                    },
                    body: JSON.stringify({ categoryID, ingredientName }) // JSON 형태로 변환하여 전송
                });

                if (response.status === 401) {
                    // 인증되지 않은 경우 로그인 페이지로 리다이렉트
                    alert('재료를 추가하기 위해서는 로그인이 필요합니다. 로그인 페이지로 이동합니다.');
                    window.location.href = '/user/login';
                } else if (response.ok) {
                    // 성공적으로 처리된 경우 리다이렉트
                    alert('재료가 성공적으로 추가되었습니다.');
                    window.location.href = '/category'; // 성공 시 /category로 리다이렉트
                } else {
                    // 기타 에러 처리
                    const errorData = await response.json();
                    alert('재료 추가 중 오류가 발생했습니다: ' + errorData.message);
                }
            } catch (error) {
                console.error('Error:', error);
                alert('서버와의 통신 중 오류가 발생했습니다.');
            }
        });
    </script>
</body>
</html>
