<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

    <title>레시피 검색 및 추천</title>

    <!-- CSS 추가 -->
    <style>
        /* 폰트 설정 */
        @font-face {
            font-family: 'BMJUA';
            src: url('https://fastly.jsdelivr.net/gh/projectnoonnu/noonfonts_one@1.0/BMJUA.woff') format('woff');
            font-weight: normal;
            font-style: normal;
        }
        
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'BMJUA', sans-serif;
        }

        body {
            background-color: #A7E344;
            padding: 20px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: flex-start;
        }

        h2 {
            margin-bottom: 20px;
            font-size: 24px;
            color: #333;
        }

        /* 버튼 스타일 */
        button {
            width: 100%;
            padding: 14px;
            margin-bottom: 10px;
            font-size: 18px;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        #getRecommendations, #searchRecipes {
            background-color: #03A9F4;
            color: #fff;
        }

        #getRecommendations:hover, #searchRecipes:hover {
            background-color: #0288D1;
        }

        #loadMoreRecommendations, #loadMoreSearchResults {
            background-color: #F44336;
            color: #fff;
        }

        #loadMoreRecommendations:hover, #loadMoreSearchResults:hover {
            background-color: #D32F2F;
        }

        /* 입력 필드 및 셀렉트 스타일 */
        input[type="text"], select {
            width: 100%;
            padding: 12px;
            margin-bottom: 10px;
            font-size: 16px;
            border-radius: 10px;
            border: none;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        /* 리스트 스타일 */
        ul {
            list-style: none;
            padding: 0;
            width: 100%;
        }

        ul li {
            background-color: #FFFFFF;
            margin-bottom: 10px;
            padding: 10px;
            border-radius: 10px;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
        }

        ul li a {
    text-decoration: none;
    color: #03A9F4; 
    font-weight: bold;
    display: flex; /* 아이콘과 텍스트를 가로로 배치 */
    align-items: center;
    padding: 10px;
    border-radius: 8px;
    transition: background-color 0.3s ease;
}

ul li a i {
    margin-right: 8px; /* 아이콘과 텍스트 사이의 간격 */
}

ul li a:hover {
    background-color: rgba(3, 169, 244, 0.2); /* 호버 시 배경색 */
    cursor: pointer;
}


        h3 {
            margin-bottom: 10px; /* h3 태그 밑으로 5px 여유 공간 추가 */
            font-size: 20px;
            color: #333;
        }


        p {
            margin: 5px 0;
        }
    </style>
</head>
<body>
    <h2>레시피 검색</h2>
    <button id="getRecommendations">레시피 추천 받기</button>
    <button id="loadMoreRecommendations" style="display:none;">더보기</button> <br> <br> 
    <input type="text" id="searchQuery" placeholder="레시피 또는 재료를 검색하세요">
    <select id="searchType">
        <option value="recipeTitle">레시피 제목</option>
        <option value="ingredientName">재료 이름</option>
    </select>
    <button id="searchRecipes">검색</button>
    <button id="loadMoreSearchResults" style="display:none;">더보기</button>

    <h3>검색된 레시피 결과</h3>
    <ul id="searchResultList"></ul>

    <h3>추천된 레시피 결과</h3>
    <ul id="recommendationList"></ul>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</body>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const recommendationButton = document.getElementById('getRecommendations');
    const loadMoreRecommendationsButton = document.getElementById('loadMoreRecommendations');
    const searchButton = document.getElementById('searchRecipes');
    const loadMoreSearchButton = document.getElementById('loadMoreSearchResults');
    const recommendationList = document.getElementById('recommendationList');
    const searchResultList = document.getElementById('searchResultList');
    const searchTypeSelect = document.getElementById('searchType');

    let recommendationOffset = 0;
    let searchOffset = 0;
    const limit = 10;

    // 이미 제공된 레시피 ID 추적을 위한 배열
    let recommendedRecipeIDs = [];

    // Function to create a clickable list item
    function createRecipeListItem(recipe) {
        const listItem = document.createElement('li');
        const recipeLink = document.createElement('a');


    // 아이콘과 제목을 함께 감싸는 <a> 태그 설정
    recipeLink.href = `/recipe/${recipe.recipeID}`;  
    recipeLink.style.cursor = 'pointer';  
    recipeLink.style.color = '#03A9F4';  
    recipeLink.style.fontWeight = 'bold'; 
    recipeLink.innerHTML = `<i class="fa fa-external-link" aria-hidden="true"></i> ${recipe.recipeTitle}`; // 아이콘 추가



        listItem.appendChild(recipeLink);
        listItem.innerHTML += `
            <p><strong style="color: #00000;">현재 가지고 있는 재료:</strong></p>
            <p>재료: ${recipe.realIngredientsUserHas?.join(', ') || '없음'}</p>
            <p>양념: ${recipe.condimentsUserHas?.join(', ') || '없음'}</p>
            <p><strong style="color: #F44336;">필요한 재료:</strong></p>
            <p>재료: ${recipe.realIngredientsUserNeeds?.join(', ') || '없음'}</p>
            <p>양념: ${recipe.condimentsUserNeeds?.join(', ') || '없음'}</p>
        `;
        return listItem;
    }

    // 레시피 추천 받기 버튼 클릭 시
    recommendationButton.addEventListener('click', async () => {
        recommendationOffset = 0;
        recommendationList.innerHTML = '';
        recommendedRecipeIDs = []; // 새로운 추천을 받을 때마다 초기화
        await loadRecommendations();
    });


    loadMoreRecommendationsButton.addEventListener('click', async () => {
        await loadRecommendations();
    });


    async function loadRecommendations() {
        try {
            const accessToken = sessionStorage.getItem('accessToken');
            // 이미 제공된 레시피 ID를 쿼리로 추가
            const excludeRecipesQuery = recommendedRecipeIDs.length ? `&excludeRecipes=${recommendedRecipeIDs.join(',')}` : '';
            const response = await fetch(`/recipe/recommendations?limit=${limit}&offset=${recommendationOffset}${excludeRecipesQuery}`, {
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken,
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Failed to fetch recommendations');
            }

            const recipes = await response.json();
            recipes.forEach(recipe => {
                const listItem = createRecipeListItem(recipe);
                recommendationList.appendChild(listItem);
                recommendedRecipeIDs.push(recipe.recipeID); // 이미 추천된 레시피 ID 추적
            });

            recommendationOffset += limit;

            if (recipes.length < limit) {
                loadMoreRecommendationsButton.style.display = 'none'; // 더 이상 로드할 레시피가 없을 경우
            } else {
                loadMoreRecommendationsButton.style.display = 'block'; // 더보기 버튼 표시
            }
        } catch (error) {
            console.error('Error fetching recommendations:', error);
            alert('레시피 추천을 가져오는 데 실패했습니다.');
        }
    }

    // 레시피 검색 버튼 클릭 시
    searchButton.addEventListener('click', async () => {
        searchOffset = 0;
        searchResultList.innerHTML = '';
        await loadSearchResults();
    });

    loadMoreSearchButton.addEventListener('click', async () => {
        await loadSearchResults();
    });

    async function loadSearchResults() {
        const query = document.getElementById('searchQuery').value.trim();
        const searchType = searchTypeSelect.value;

        if (!query) {
            alert('검색어를 입력하세요.');
            return;
        }

        try {
            const accessToken = sessionStorage.getItem('accessToken');
            const response = await fetch(`/recipe/search?query=${encodeURIComponent(query)}&type=${searchType}&limit=${limit}&offset=${searchOffset}`, {
                method: 'GET',
                headers: {
                    'Authorization': 'Bearer ' + accessToken,
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) {
                throw new Error('Failed to fetch search results');
            }

            const searchResults = await response.json();
            searchResults.forEach(recipe => {
                const listItem = createRecipeListItem(recipe);
                searchResultList.appendChild(listItem);
            });

            searchOffset += limit;

            if (searchResults.length < limit) {
                loadMoreSearchButton.style.display = 'none'; // 더 이상 로드할 검색 결과가 없을 경우
            } else {
                loadMoreSearchButton.style.display = 'block'; // 더보기 버튼 표시
            }
        } catch (error) {
            console.error('Error searching recipes:', error);
            alert('레시피 검색에 실패했습니다.');
        }
    }
});
</script>
</html>
